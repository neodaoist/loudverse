# Close a funding round, compute quadratic funding and apply grant match

name: Close Funding Round

# Run Manually
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      matchpool_amount:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Matchpool amount'
        # Default value if no value is explicitly provided
        default: '0.02'
        # Input has to be provided for the workflow to run
        required: true
      max_per_call:
        description: 'Maximum match per Call'
        default: '0'
        required: false
      network:
        type: choice
        description: 'Network to send match to -- dryrun for test'
        options:
          - rinkeby
          - mumbai
          - polygon
          - dryrun
        required: true


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  funding:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    # Runs a single command using the runners shell
    - name: Set up ts-node
      run: cd packages/next-app/util && yarn add -D ts-node typescript
    - name: Add ts-node types
      run: cd packages/next-app/util && yarn add -D @types/node
    - name: Computed Double-Constrained Quadratic Funding
      run: cd packages/next-app/util && node --loader ts-node/esm endroundhook.ts ${{ github.event.inputs.matchpool_amount }} ${{ secrets.MATCH_POOL_KEY }} ${{ github.event.inputs.max_per_call }} ${{ github.event.inputs.network }}


