// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CallForFundsCreated extends ethereum.Event {
  get params(): CallForFundsCreated__Params {
    return new CallForFundsCreated__Params(this);
  }
}

export class CallForFundsCreated__Params {
  _event: CallForFundsCreated;

  constructor(event: CallForFundsCreated) {
    this._event = event;
  }

  get CallForFunds(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }

  get image(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get category(): string {
    return this._event.parameters[5].value.toString();
  }

  get genre(): string {
    return this._event.parameters[6].value.toString();
  }

  get subgenre(): string {
    return this._event.parameters[7].value.toString();
  }

  get timelineInDays(): i32 {
    return this._event.parameters[8].value.toI32();
  }

  get minFundingAmount(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get deliverableMedium(): string {
    return this._event.parameters[10].value.toString();
  }
}

export class CallForFundsFactory extends ethereum.SmartContract {
  static bind(address: Address): CallForFundsFactory {
    return new CallForFundsFactory("CallForFundsFactory", address);
  }

  createCallForFunds(
    _title: string,
    _description: string,
    _image: string,
    _category: string,
    _genre: string,
    _subgenre: string,
    _timelineInDays: i32,
    _minFundingAmount: BigInt,
    _deliverableMedium: string
  ): Address {
    let result = super.call(
      "createCallForFunds",
      "createCallForFunds(string,string,string,string,string,string,uint8,uint256,string):(address)",
      [
        ethereum.Value.fromString(_title),
        ethereum.Value.fromString(_description),
        ethereum.Value.fromString(_image),
        ethereum.Value.fromString(_category),
        ethereum.Value.fromString(_genre),
        ethereum.Value.fromString(_subgenre),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_timelineInDays)),
        ethereum.Value.fromUnsignedBigInt(_minFundingAmount),
        ethereum.Value.fromString(_deliverableMedium)
      ]
    );

    return result[0].toAddress();
  }

  try_createCallForFunds(
    _title: string,
    _description: string,
    _image: string,
    _category: string,
    _genre: string,
    _subgenre: string,
    _timelineInDays: i32,
    _minFundingAmount: BigInt,
    _deliverableMedium: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createCallForFunds",
      "createCallForFunds(string,string,string,string,string,string,uint8,uint256,string):(address)",
      [
        ethereum.Value.fromString(_title),
        ethereum.Value.fromString(_description),
        ethereum.Value.fromString(_image),
        ethereum.Value.fromString(_category),
        ethereum.Value.fromString(_genre),
        ethereum.Value.fromString(_subgenre),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_timelineInDays)),
        ethereum.Value.fromUnsignedBigInt(_minFundingAmount),
        ethereum.Value.fromString(_deliverableMedium)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  logicAddress(): Address {
    let result = super.call("logicAddress", "logicAddress():(address)", []);

    return result[0].toAddress();
  }

  try_logicAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("logicAddress", "logicAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _logicAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateCallForFundsCall extends ethereum.Call {
  get inputs(): CreateCallForFundsCall__Inputs {
    return new CreateCallForFundsCall__Inputs(this);
  }

  get outputs(): CreateCallForFundsCall__Outputs {
    return new CreateCallForFundsCall__Outputs(this);
  }
}

export class CreateCallForFundsCall__Inputs {
  _call: CreateCallForFundsCall;

  constructor(call: CreateCallForFundsCall) {
    this._call = call;
  }

  get _title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _image(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _category(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _genre(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _subgenre(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _timelineInDays(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get _minFundingAmount(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _deliverableMedium(): string {
    return this._call.inputValues[8].value.toString();
  }
}

export class CreateCallForFundsCall__Outputs {
  _call: CreateCallForFundsCall;

  constructor(call: CreateCallForFundsCall) {
    this._call = call;
  }

  get proxy(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
